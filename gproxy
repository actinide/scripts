#!/bin/sh
#
# /etc/init.d/gproxy -- startup script for bitly's google_auth_proxy
# (https://github.com/bitly/google_auth_proxy)
# Author: actinide@gmail.com 2015-03-06; used Kibana init script as template
#
### BEGIN INIT INFO
# Provides:          google_auth_proxy
# Required-Start:    $network $remote_fs $named
# Required-Stop:     $network $remote_fs $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts google_auth_proxy
# Description:       Starts googleproxy using start-stop-daemon
### END INIT INFO

# Change this to wherever your google_auth_proxy bin resides:
GPROXY_BIN=/opt/google_auth_proxy

PID_FILE=/var/run/$NAME.pid
PATH=/bin:/usr/bin:/sbin:/usr/sbin:$GPROXY_BIN
DAEMON=$GPROXY_BIN/google_auth_proxy
NAME=gproxy
DESC="gproxy"

# Change this to wherever your config file lives
GPROXY_CONFIG="-config=/etc/google_auth_proxy.cfg"

if [ `id -u` -ne 0 ]; then
	echo "You need root privileges to run this script"
	exit 1
fi

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
	. /etc/default/rcS
fi

case "$1" in
  start)
	log_daemon_msg "Starting $DESC"

	pid=`pidofproc -p $PID_FILE gproxy`
	if [ -n "$pid" ] ; then
		log_begin_msg "Already running."
		log_end_msg 0
		exit 0
	fi

	# Start daemon
	start-stop-daemon --start --pidfile "$PID_FILE" --make-pidfile --background --exec $DAEMON -- $GPROXY_CONFIG
	log_end_msg $?
	;;
  stop)
	log_daemon_msg "Stopping $DESC"

	if [ -f "$PID_FILE" ]; then
		start-stop-daemon --stop --pidfile "$PID_FILE" \
			--retry=TERM/20/KILL/5 >/dev/null
		if [ $? -eq 1 ]; then
			log_progress_msg "$DESC is not running but pid file exists, cleaning up"
		elif [ $? -eq 3 ]; then
			PID="`cat $PID_FILE`"
			log_failure_msg "Failed to stop $DESC (pid $PID)"
			exit 1
		fi
		rm -f "$PID_FILE"
	else
		log_progress_msg "(not running)"
	fi
	log_end_msg 0
	;;
  status)
	status_of_proc -p $PID_FILE gproxy gproxy && exit 0 || exit $?
    ;;
  restart|force-reload)
	if [ -f "$PID_FILE" ]; then
		$0 stop
		sleep 1
	fi
	$0 start
	;;
  *)
	log_success_msg "Usage: $0 {start|stop|restart|force-reload|status}"
	exit 1
	;;
esac

exit 0
